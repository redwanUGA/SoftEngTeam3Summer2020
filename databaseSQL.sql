-- MySQL Script generated by MySQL Workbench
-- Tue 14 Jul 2020 08:33:45 PM EDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Bookstore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Bookstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Bookstore` ;
USE `Bookstore` ;

-- -----------------------------------------------------
-- Table `Bookstore`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Category` (
  `idCategory` INT NOT NULL,
  `category` VARCHAR(45) NULL,
  PRIMARY KEY (`idCategory`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Books` (
  `ISBN` INT NOT NULL,
  `category` INT NULL,
  `author` VARCHAR(45) NULL,
  `title` VARCHAR(45) NULL,
  `cover` VARCHAR(45) NULL,
  `edition` VARCHAR(45) NULL,
  `publisher` VARCHAR(45) NULL,
  `pubYear` INT NULL,
  `inStock` INT NULL,
  `minTresh` INT NULL,
  `buyPrice` INT NULL,
  `sellPrice` INT NULL,
  PRIMARY KEY (`ISBN`),
  INDEX `fk_Category_idx` (`category` ASC) VISIBLE,
  CONSTRAINT `fk_Category`
    FOREIGN KEY (`category`)
    REFERENCES `Bookstore`.`Category` (`idCategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Address` (
  `idAddress` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `street2` VARCHAR(45) NULL,
  `zipCode` INT NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idAddress`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Payment` (
  `idPayment` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `cardNumber` INT NOT NULL,
  `expirationDate` INT NOT NULL,
  `securityCode` INT NOT NULL,
  `billingAddress` INT NULL,
  PRIMARY KEY (`idPayment`),
  INDEX `fk_Address_idx` (`billingAddress` ASC) VISIBLE,
  CONSTRAINT `fk_Address`
    FOREIGN KEY (`billingAddress`)
    REFERENCES `Bookstore`.`Address` (`idAddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`UserStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`UserStatus` (
  `idUserStatus` INT NOT NULL,
  `userStatus` VARCHAR(45) NULL,
  PRIMARY KEY (`idUserStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Cart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Cart` (
  `idCart` INT NOT NULL,
  `total` INT NOT NULL,
  PRIMARY KEY (`idCart`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Users` (
  `userID` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NULL,
  `phone` INT NOT NULL,
  `AddressID` INT NULL,
  `PaymentID` INT NULL,
  `Subscription` TINYINT NOT NULL,
  `userStatus` INT NOT NULL,
  `CartID` INT NOT NULL,
  PRIMARY KEY (`userID`),
  INDEX `fk_Address_idx` (`AddressID` ASC) VISIBLE,
  INDEX `fk_Payment_idx` (`PaymentID` ASC) VISIBLE,
  INDEX `fk_userStatus_idx` (`userStatus` ASC) VISIBLE,
  INDEX `fk_Cart_idx` (`CartID` ASC) VISIBLE,
  CONSTRAINT `fk_Address`
    FOREIGN KEY (`AddressID`)
    REFERENCES `Bookstore`.`Address` (`idAddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Payment`
    FOREIGN KEY (`PaymentID`)
    REFERENCES `Bookstore`.`Payment` (`idPayment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userStatus`
    FOREIGN KEY (`userStatus`)
    REFERENCES `Bookstore`.`UserStatus` (`idUserStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cart`
    FOREIGN KEY (`CartID`)
    REFERENCES `Bookstore`.`Cart` (`idCart`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Bookstore`.`Promotion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Promotion` (
  `idPromotion` INT NOT NULL,
  `promoCode` VARCHAR(45) NOT NULL,
  `discountAmount` INT NOT NULL,
  PRIMARY KEY (`idPromotion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`Orders` (
  `orderID` INT NOT NULL,
  `userID` INT NOT NULL,
  `total` INT NOT NULL,
  `paymentID` INT NOT NULL,
  `AddressID` INT NOT NULL,
  `promoID` INT NOT NULL,
  PRIMARY KEY (`orderID`),
  INDEX `fk_UserID_idx` (`userID` ASC) VISIBLE,
  INDEX `fk_paymentID_idx` (`paymentID` ASC) VISIBLE,
  INDEX `fk_AddressID_idx` (`AddressID` ASC) VISIBLE,
  INDEX `fk_promoID_idx` (`promoID` ASC) VISIBLE,
  CONSTRAINT `fk_UserID`
    FOREIGN KEY (`userID`)
    REFERENCES `Bookstore`.`Users` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paymentID`
    FOREIGN KEY (`paymentID`)
    REFERENCES `Bookstore`.`Payment` (`idPayment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AddressID`
    FOREIGN KEY (`AddressID`)
    REFERENCES `Bookstore`.`Address` (`idAddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_promoID`
    FOREIGN KEY (`promoID`)
    REFERENCES `Bookstore`.`Promotion` (`idPromotion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`cartItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`cartItems` (
  `idcartItems` INT NOT NULL,
  `cartID` INT NOT NULL,
  `bookID` INT NOT NULL,
  `quantity` VARCHAR(45) NULL,
  PRIMARY KEY (`idcartItems`),
  INDEX `fk_cartID_idx` (`cartID` ASC) VISIBLE,
  INDEX `fk_bookID_idx` (`bookID` ASC) VISIBLE,
  CONSTRAINT `fk_cartID`
    FOREIGN KEY (`cartID`)
    REFERENCES `Bookstore`.`Cart` (`idCart`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bookID`
    FOREIGN KEY (`bookID`)
    REFERENCES `Bookstore`.`Books` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bookstore`.`orderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Bookstore`.`orderItems` (
  `idOrder_Product` INT NOT NULL,
  `orderID` INT NOT NULL,
  `ProductID` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`idOrder_Product`),
  INDEX `fk_orderID_idx` (`orderID` ASC) VISIBLE,
  INDEX `fk_productID_idx` (`ProductID` ASC) VISIBLE,
  CONSTRAINT `fk_orderID`
    FOREIGN KEY (`orderID`)
    REFERENCES `Bookstore`.`Orders` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productID`
    FOREIGN KEY (`ProductID`)
    REFERENCES `Bookstore`.`Books` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE USER 'user1';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
